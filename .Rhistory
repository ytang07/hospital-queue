rm(mu_t, mu_sat, na_sat, na_t)
ss = function(df1, mu){
val = 0
for (i in df1){
p = (i-mu)^2
}
}
ss = function(df1, mu){
val = 0
for (i in df1){
p = (i-mu)^2
val = val + p
}
return val
}
ss = function(df1, mu){
val = 0
for (i in df1){
p = (i-mu)^2
val = val + p
}
return (val)
}
ss(x, mean(x, na.rm=TRUE))
x <- sat_from_t$Avg.SAT
ss = function(df1, mu){
val = 0
for (i in df1){
p = (i-mu)^2
val = val + p
}
return (val)
}
ss = function(df1, mu){
val = 0
for (i in df1){
if (!is.na(i)){
p = (i-mu)^2
val = val + p
}
}
return (val)
}
ss(x, mean(x,na.rm=TRUE))
1302*967^2
y <- sat_from_t$Out.Tuition
Sx = sum((x-mu_x)^2, na.rm = TRUE)
Sy = sum((y-mu_y)^2, na.rm = TRUE)
beta1 = function(r, Sy, Sx){
if (Sx != 0){
b1 = r*Sy/Sx
}
else{
return("divide by 0 error")
}
return(b1)
}
beta2 = function(y_bar, x_bar, r, Sy, Sx){
b0 = y_bar-beta1(r, Sy, Sx)*x_bar
return (b0)
}
rm(x, y)
xs = as.data.frame(tuition$Avg.SAT)
ys = as.data.frame(tuition$Out.Tuition)
mu_x = mean(xs$Avg.SAT, na.rm = TRUE)
mu_y = mean(ys$Out.Tuition, na.rm = TRUE)
r = cor(sat_from_t, method="pearson", use="pairwise.complete.obs")
Sx = sum((x-mu_x)^2, na.rm = TRUE)
Sy = sum((y-mu_y)^2, na.rm = TRUE)
b1 = beta1(r, Sy, Sx)
b0 = beta0(mu_y, mu_x, r, Sy, Sx)
plot.new
plot(x, y, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b0+b1*x)
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
plot.new
plot(x, y, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*x)
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
plot.new
plot(x, y, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*xs)
plot.new
plot(xs, ys, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*xs)
plot.new
plot(xs, ys, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*xs)
plot.new
plot(xs, ys, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue, na.rm=TRUE)
abline(b2+b1*xs)
plot.new
plot(!is.na(xs), !is.na(ys), main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*!is.na(xs))
plot.new
plot(!is.na(xs), !is.na(ys), main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = blue)
abline(b2+b1*!is.na(xs))
xy = c(xs, ys)
View(xy)
View(xy)
rm(xy)
rm(ss)
xy = tuition[complete.cases(c("Avg.SAT", "Out.Tuition"))]
View(xy)
View(xy)
xy = tuition[complete.cases(c("Avg.SAT", "Out.Tuition")),]
?complete.cases
xy = complete.cases(xs, ys)
xy = c(xs[complete.cases(xs,ys)], ys[complete.cases(xs,ys)])
xy = c(xs[complete.cases(xs,ys),], ys[complete.cases(xs,ys),])
xy = as.table(setNames(xs[complete.cases(xs,ys),], ys[complete.cases(xs,ys),]))
xy = as.data.frame(xs[complete.cases(xs,ys),], ys[complete.cases(xs,ys),])
View(xy)
View(xy)
xy = as.data.frame(setNames(xs[complete.cases(xs,ys),], ys[complete.cases(xs,ys),]))
rm(xy)
plot(xs, ys)
plot(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`)
plot.new
plot(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = "blue")
abline(b2+b1*xs)
abline(b2, b1*xs)
abline(b2, b1)
b2 = beta2(mu_y, mu_x, r[1,1], Sy, Sx)
abline(b2, b1)
b2
View(beta1)
b1 = beta1(r, Sy, Sx)
b1 = beta1(r[1,1], Sy, Sx)
r = cor(sat_from_t, method="pearson", use="pairwise.complete.obs")[1,1]
r = cor(sat_from_t, method="pearson", use="pairwise.complete.obs")[2,1]
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
abline(b2,b1)
View(beta2)
View(beta2)
View(xs)
mu_x = mean(xs$`tuition$Avg.SAT`, na.rm = TRUE)
mu_y = mean(ys$`tuition$Out.Tuition`, na.rm = TRUE)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
abline(b2,b1)
abline(b1,b2)
plot.new
plot(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = "blue")
abline(b1,b2)
Sx = sqrt(sum((x-mu_x)^2, na.rm = TRUE))
Sy = sqrt(sum((y-mu_y)^2, na.rm = TRUE))
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
plot.new
plot(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = "blue")
abline(b2,b1)
Sx = sqrt(sum((xs-mu_x)^2, na.rm = TRUE))
Sy = sqrt(sum((ys-mu_y)^2, na.rm = TRUE))
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
plot.new
plot(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, main="Avg SAT vs Tuition", xlab = "Avg SAT", ylab = "Tuition", col = "blue")
abline(b2,b1)
r = cor(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, method="pearson", use="pairwise.complete.obs")[2,1]
r = cor(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, method="pearson", use="pairwise.complete.obs")
predict_yval <- function(X, Y, x_new){
mu_x = mean(x, na.rm = TRUE)
mu_y = mean(y, na.rm = TRUE)
r = cor(x, y, method = "pearson", use="pairwise.complete.obs")
Sx = sqrt(sum((x-mu_x)^2, na.rm = TRUE))
Sy = sqrt(sum((y-mu_y)^2, na.rm = TRUE))
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
y_new = b2 + b1 * x_new
return(y_new)
}
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 972)
predict_yval <- function(X, Y, x_new){
mu_x = mean(X, na.rm = TRUE)
mu_y = mean(Y, na.rm = TRUE)
r = cor(X, Y, method = "pearson", use="pairwise.complete.obs")
Sx = sqrt(sum((X-mu_x)^2, na.rm = TRUE))
Sy = sqrt(sum((Y-mu_y)^2, na.rm = TRUE))
b1 = beta1(r, Sy, Sx)
b2 = beta2(mu_y, mu_x, r, Sy, Sx)
y_new = b2 + b1 * x_new
return(y_new)
}
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 972)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 881)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 990)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 1280)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 600)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 800)
predict_yval(sat_from_t$Avg.SAT, sat_from_t$Out.Tuition, 1000)
duke <- tuition[tuition$Name == "Duke University",]
unc_sat = unc$Avg.SAT
duke_sat = duke$Avg.SAT
unc_sat = unc[Avg.SAT,1]
duke_sat = duke[Avg.SAT,1]
unc_sat = unc["Avg.SAT",1]
duke_sat = duke["Avg.SAT",1]
unc_sat = unc$Avg.SAT[1]
duke_sat = duke$Avg.SAT[1]
predict_yval(xs, ys, unc_sat)
predict_yval(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, unc_sat)
unc_t_pred = predict_yval(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, unc_sat)
duke_t_pred = predict_yval(xs$`tuition$Avg.SAT`, ys$`tuition$Out.Tuition`, duke_sat)
unc_t_pred
unc$Out.Tuition[1]
duke_t_pred
duke$Out.Tuition[1]
rm(list = ls())
load("~/Fall_18/CDC18/Basketball/.RData")
View(shots)
one_left3_scorediff <- subset(left3_1app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
four_left3_scorediff <- subset(left34app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
four_left3_scorediff <- subset(left3_4app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
five_left3_scorediff <- subset(left3_5app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
one_right3_scorediff <- subset(right3_1app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
four_right3_scorediff <- subset(right3_4app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
five_right3_scorediff <- subset(right3_5app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
one_mid3_scorediff <- subset(mid3_1app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
four_mid3_scorediff <- subset(mid3_4app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
five_mid3_scorediff <- subset(mid3_5app, select=c("Outcome..1.if.made..0.otherwise.", "Team_Score", "Opponent_Score"))
write.csv(one_left3_scorediff, "one_left3_scorediff.csv")
write.csv(four_left3_scorediff, "four_left3_scorediff.csv")
write.csv(five_left3_scorediff, "five_left3_scorediff.csv")
write.csv(one_right3_scorediff, "one_right3_scorediff.csv")
write.csv(four_right3_scorediff, "four_right3_scorediff.csv")
write.csv(five_right3_scorediff, "five_right3_scorediff.csv")
write.csv(one_mid3_scorediff, "one_mid3_scorediff.csv")
write.csv(four_mid3_scorediff, "four_mid3_scorediff.csv")
write.csv(five_mid3_scorediff, "five_mid3_scorediff.csv")
View(ft)
View(all_star)
unique(all_star$Player)
View(historical)
View(cont)
rm(list = ls())
pwd
pwd()
getwd()
read.csv("./Fall_18/COMP562/Final-Project/train.csv")
train <- read.csv("./Fall_18/COMP562/Final-Project/train.csv")
train.lebels
train.labels
View(train)
lm(SalePrice ~ . - Id, data = train, na.exclude)
lm(SalePrice ~ . - Id, data = train, na.omit)
lm(SalePrice ~ . - Id, data = train)
x <- rq(5, mu = 0.5, sigma = 1, 't2','t2'); x
dq(x, mu = 0.5, sigma = 1, 't2','t2')
qtil <- pq(x, mu = 0.5, sigma = 1, 't2','t2');qtil
qq(qtil , mu = 0.5, sigma = 1, 't2','t2')
dq
?pt
rm(list=ls())
save.image("~/.RData")
setwd("~/Spring19/672/project")
read.csv("myopic.csv")
myopic <- read.csv("myopic.csv")
myopic <- myopic[1:250,]
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
testres <- t.test(myopic, random, paired = "TRUE", alternative="greater")
View(myopic)
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
msurv <- myopic[1,]
msurv <- myopic[1]
msurv <- myopic[,1]
rsurv <- random[,1]
testres <- t.test(msurv, rsurv, paired = "TRUE", alternative = "greater")
testres <- t.test(msurv, rsurv, paired = TRUE, alternative = "greater")
testres$p.value
testres <- t.test(msurv, rsurv, paired = TRUE, alternative = "two-sided")
testres <- t.test(msurv, rsurv, paired = TRUE, alternative = "two.sided")
testres$p.value
hist(msurv)
hist(rsurv)
scatter(msurv)
plot(msurv)
plot(rsurv)
mnum <- myopic[,2]
rnum <- myopic[,2]
plot(msurv, mnum, xlim=c(200, 250), ylim=c(40, 100), xlab="Total Number of Patients", ylab="Expected Survivals, Myopic Selection")
plot(mnum, msurv, xlim=c(200, 250), ylim=c(40, 100), xlab="Total Number of Patients", ylab="Expected Survivals, Myopic Selection")
plot(rnum, rsurv, xlim=c(200, 250), ylim=c(40, 100), xlab="Total Number of Patients", ylab="Expected Survivals, Random Selection")
plot(mnum, msurv, xlim=c(200, 250), ylim=c(40, 100), xlab="Total Number of Patients", ylab="Expected Survivals", title = "Myopic Selection")
hist(msurv, xlab = "Survival Rates", ylab = "Occurences")
hist(msurv, xlab = "Expected Survival Rates", ylab = "Occurences", density = TRUE)
hist(msurv, xlab = "Expected Survival Rates", ylab = "Occurences", scale = TRUE)
hist(msurv, xlab = "Expected Survival Rates", ylab = "Occurences")
hist(msurv, xlab = "Expected Survival Rates", ylab = "Occurences")
hist(rsurv, xlab = "Expected Survival Rates", ylab = "Occurences")
hist(rsurv, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate using Random Selection")
hist(rsurv, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate // using Random Selection")
hist(rsurv, xlab = "Expected Survival Rates", ylab = "Occurences", main = paste("Distribution of Expected Survival Rate"\n"using Random Selection"))
hist(rsurv, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Random Selection")
hist(msurv, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection")
pairs(myopic)
myopic$names <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients)
)
()
;
;
:
""
"
myopic$names <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
pairs(myopic)
pairs(myopic, scale = TRUE)
pairs(random)
pairs(random, cex.labels = 8)
pairs(random, cex.labels = 2)
pairs(myopic, cex.labels = 2)
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
plot(perc_surv_m)
conf <- function(perc, mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
conf(mean(msurv), std(msurv), 254)
conf(mean(msurv), sd(msurv), 254)
conf(mean(perc_surv_m), sd(msurv), 254)
conf <- function(mean, sd, n){
err <- qnorm(0.95)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
conf(mean(perc_surv_m), sd(msurv), 254)
plot(msurv)
hist(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection")
hist(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection", density=3)
hist(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection", density=4)
hist(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection")
hist(perc_surv_r, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Random Selection")
plot(perc_surv_r, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Random Selection")
plot(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection")
plot(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection", ylim=c(.15, ,45))
plot(perc_surv_m, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Myopic Selection", ylim=c(.15, .45))
plot(perc_surv_r, xlab = "Expected Survival Rates", ylab = "Occurences", main = "Distribution of Expected Survival Rate \n using Random Selection", ylim=c(.15, .45))
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
conf(mean(perc_surv_m), sd(msurv), 1000)
conf(mean(perc_surv_r), sd(msurv), 1000)
pairs(myopic, cex.labels = 2)
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
pairs(random)
pairs(myopic)
conf(mean(perc_surv_r), sd(msurv), 1000)
conf(mean(perc_surv_r), sd(rsurv), 3000)
print(conf(mean(perc_surv_r), sd(rsurv), 3000))
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
testres$p.value
msurv <- myopic[,1]
rsurv <- random[,1]
mnum <- myopic[,2]
rnum <- myopic[,2]
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
print(conf(mean(perc_surv_m), sd(msurv), 2999))
print(conf(mean(perc_surv_r), sd(rsurv), 2999))
conf99 <- function(mean, sd, n){
err <- qnorm(0.995)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
conf99(mean(perc_surv_r), sd(perc_surv_r), 2999)
print(conf(mean(perc_surv_r), sd(perc_surv_r), 2999))
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
testres$p.value
msurv <- myopic[,1]
rsurv <- random[,1]
mnum <- myopic[,2]
rnum <- myopic[,2]
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
print(conf(mean(perc_surv_m), sd(perc_surv_m), 2999))
print(conf(mean(perc_surv_r), sd(perc_surv_r), 2999))
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
testres$p.value
msurv <- myopic[,1]
rsurv <- random[,1]
mnum <- myopic[,2]
rnum <- myopic[,2]
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
print(conf(mean(perc_surv_m), sd(perc_surv_m), 249))
print(conf(mean(perc_surv_r), sd(perc_surv_r), 249))
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
testres$p.value
msurv <- myopic[,1]
rsurv <- random[,1]
mnum <- myopic[,2]
rnum <- myopic[,2]
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
print(conf(mean(perc_surv_m), sd(perc_surv_m), 99))
print(conf(mean(perc_surv_r), sd(perc_surv_r), 99))\
myopic <- read.csv("myopic.csv")
random <- read.csv("random.csv")
colnames(random) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(myopic) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
testres <- t.test(myopic[1], random[1], paired = "TRUE", alternative="greater")
testres$p.value
msurv <- myopic[,1]
rsurv <- random[,1]
mnum <- myopic[,2]
rnum <- myopic[,2]
perc_surv_m <- msurv/mnum
perc_surv_r <- rsurv/rnum
conf <- function(mean, sd, n){
err <- qnorm(0.975)*sd/sqrt(n)
low <- mean-err
high <- mean+err
list(low, high)
}
print(conf(mean(perc_surv_m), sd(perc_surv_m), 99))
print(conf(mean(perc_surv_r), sd(perc_surv_r), 99))
first <- read.csv("first.csv")
last <- read.csv("last.csv")
colnames(first) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
colnames(last) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
fsurv <- first[,1]
lsurv <- last[,1]
fnum <- first[,2]
lnum <- last[,2]
perc_surv_f <- fsurv/fnum
perc_surv_l <- lsurv/lnum
print(conf(mean(perc_surv_f), sd(perc_surv_f), 99))
print(conf(mean(perc_surv_l), sd(perc_surv_l), 99))
View(first)
View(last)
first <- read.csv("first.csv")
colnames(first) <- c("Expected Survivals", "Total Patients", "# Immediate Patients", "# Delayed Patients")
fsurv <- first[,1]
fnum <- first[,2]
perc_surv_f <- fsurv/fnum
print(conf(mean(perc_surv_f), sd(perc_surv_f), 99))
boxplot(perc_surv_f, perc_surv_l, perc_surv_m, perc_surv_r)
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients First", "Random Selection", "Delayed Patients First", "Myopic Selection"))
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients\nFirst", "Random Selection", "Delayed Patients\nFirst", "Myopic Selection"), border = "black")
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients\nFirst", "Random Selection", "Delayed Patients\nFirst", "Myopic Selection"), border = "black", cex.label=2)
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients\nFirst", "Random Selection", "Delayed Patients\nFirst", "Myopic Selection"), border = "black", cex.names=2)
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients\nFirst", "Random Selection", "Delayed Patients\nFirst", "Myopic Selection"), border = "black")
boxplot(perc_surv_f, perc_surv_r, perc_surv_l, perc_surv_m, names = c("Immediate Patients First", "Random Selection", "Delayed Patients First", "Myopic Selection"))
